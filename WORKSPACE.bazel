# Copyright 2021 Nisaba Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Bazel (http://bazel.io/) workspace file.
#
# Where the SHA-256 checksums are needed, these can be generated using the
# `sha256sum` tool on Unix platforms (found as part of `coreutils` package
# in most Linux distributions).

workspace(name = "com_google_nisaba")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# -------------------------------------------------------------------------
# Google protocol buffers. See
#    https://github.com/protocolbuffers/protobuf
# -------------------------------------------------------------------------
protobuf_version = "3.14.0"
protobuf_sha256 = "d0f5f605d0d656007ce6c8b5a82df3037e1d8fe8b121ed42e536f569dec16113"

http_archive(
    name = "com_google_protobuf",
    sha256 = protobuf_sha256,
    strip_prefix = "protobuf-%s" % protobuf_version,
    urls = ["https://github.com/protocolbuffers/protobuf/archive/v%s.tar.gz" %
            protobuf_version],
)

# -------------------------------------------------------------------------
# Google testing framework. See
#    https://github.com/google/googletest
# -------------------------------------------------------------------------

http_archive(
    name = "com_google_googletest",
    strip_prefix = "googletest-master",
    urls = ["https://github.com/google/googletest/archive/master.zip"],
)

# -------------------------------------------------------------------------
# Thrax: This repo is only used to retrieve some of the build rules for
# grammar manipulation. See
#    http://www.openfst.org/twiki/bin/view/GRM/Thrax
# -------------------------------------------------------------------------
thrax_version = "1.3.6-rc1"

http_archive(
    name = "org_opengrm_thrax",
    urls = ["https://github.com/agutkin/finite_state/raw/main/thrax-%s.tar.gz" % thrax_version],
    sha256 = "30d600a1504a8cdaefa9db58edd1b9779d68d42a6f2ee881826a3533e7b9bf06",
    strip_prefix = "thrax-%s" % thrax_version,
)

# -------------------------------------------------------------------------
# Pynini: See
#    http://www.opengrm.org/twiki/pub/GRM/PyniniDownload/README.md
# -------------------------------------------------------------------------

pynini_version = "2.1.4-rc1"

http_archive(
    name = "org_opengrm_pynini",
    urls = ["https://github.com/agutkin/finite_state/raw/main/pynini-%s.tar.gz" % pynini_version],
    sha256 = "a574b308427661b5f18048cd58c43209f29ce3c5c51b571f710fbe378039fcc3",
    strip_prefix = "pynini-%s" % pynini_version
)

load("@org_opengrm_pynini//bazel:workspace.bzl", "pynini_repositories")

pynini_repositories()

# -------------------------------------------------------------------------
# External Python packages.
# -------------------------------------------------------------------------

# Python external packages installation.
load("@rules_python//python:pip.bzl", "pip3_import")

pip3_import(
    name = "nisaba_deps",
    requirements = "//:requirements.txt", # Top level requirements.
)

load("@nisaba_deps//:requirements.bzl", "pip_install")
pip_install()

# -------------------------------------------------------------------------
# Protocol buffer dependencies.
# -------------------------------------------------------------------------

# Import external protobuf dependencies into this workspace.
load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()
