# Copyright 2021 Nisaba Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Bazel (http://bazel.io/) workspace file.
#
# Where the SHA-256 checksums are needed, these can be generated using the
# `sha256sum` tool on Unix platforms (found as part of `coreutils` package
# in most Linux distributions).

workspace(name = "com_google_nisaba")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# -------------------------------------------------------------------------
# Google protocol buffers. See
#    https://github.com/protocolbuffers/protobuf
# -------------------------------------------------------------------------
protobuf_version = "3.17.3"
protobuf_sha256 = "c6003e1d2e7fefa78a3039f19f383b4f3a61e81be8c19356f85b6461998ad3db"

http_archive(
    name = "com_google_protobuf",
    sha256 = protobuf_sha256,
    strip_prefix = "protobuf-%s" % protobuf_version,
    urls = ["https://github.com/protocolbuffers/protobuf/archive/v%s.tar.gz" %
            protobuf_version],
)

# -------------------------------------------------------------------------
# Google testing framework. See
#    https://github.com/google/googletest
# -------------------------------------------------------------------------

http_archive(
    name = "com_google_googletest",
    strip_prefix = "googletest-main",
    urls = ["https://github.com/google/googletest/archive/main.zip"],
)

# -------------------------------------------------------------------------
# Thrax: This repo is only used to retrieve some of the build rules for
# grammar manipulation. See
#    http://www.opengrm.org/twiki/bin/view/GRM/Thrax
# -------------------------------------------------------------------------
thrax_version = "1.3.7-rc1"

http_archive(
    name = "org_opengrm_thrax",
    urls = ["https://github.com/agutkin/finite_state/raw/main/thrax-%s.tar.gz" % thrax_version],
    sha256 = "8708b4822ed12d6ab35b6177436e0fec6e041259df7b6f7949f0bc46ad23285b",
    strip_prefix = "thrax-%s" % thrax_version,
)

# -------------------------------------------------------------------------
# Pynini: See
#    http://www.opengrm.org/twiki/bin/view/GRM/Pynini
# -------------------------------------------------------------------------
pynini_version = "2.1.5-rc1"

http_archive(
    name = "org_opengrm_pynini",
    urls = ["https://github.com/agutkin/finite_state/raw/main/pynini-%s.tar.gz" % pynini_version],
    sha256 = "2ddfa9dc76c7d47b4999f9c59426a79f40e3db480c87ecd307f5d7413e78cb63",
    strip_prefix = "pynini-%s" % pynini_version
)

load("@org_opengrm_pynini//bazel:workspace.bzl", "pynini_repositories")

pynini_repositories()

# -------------------------------------------------------------------------
# External Python packages.
# -------------------------------------------------------------------------

http_archive(
    name = "fresh_rules_python",
    url = "https://github.com/bazelbuild/rules_python/releases/download/0.3.0/rules_python-0.3.0.tar.gz",
    sha256 = "934c9ceb552e84577b0faf1e5a2f0450314985b4d8712b2b70717dc679fdc01b",
)

# Python external packages installation.
load("@fresh_rules_python//python:pip.bzl", "pip_install")

pip_install(
    name = "nisaba_deps",
    requirements = "//:requirements.txt", # Top level requirements.
)

# -------------------------------------------------------------------------
# Protocol buffer dependencies.
# -------------------------------------------------------------------------

# Import external protobuf dependencies into this workspace.
load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()

# -------------------------------------------------------------------------
# Public dependencies that need to be exposed for the downstream projects.
# -------------------------------------------------------------------------

load("@//bazel:workspace.bzl", "nisaba_public_repositories")
nisaba_public_repositories()
